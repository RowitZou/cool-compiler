遇到的问题及处理对策：

    1.
    Q: 当程序中含有分支，从现有的printf.ll，getelementptr.ll，global.ll和
    function_declaration.ll中，并不能获知在IR中能用哪些指令，来实现程序的
    条件判断和跳转。

    S: 通过查阅LLVM Language Reference官方手册，获知普通的跳转和分支判断指
    令，及其使用格式。同时，我写了一个简单的含有分支跳转的C程序，通过LLVM
    对该小程序生成的IR来辅助我决定使用哪些指令，具体用到的指令有br和icmp。

    2.
    Q: 在程序走不同的分支之后，如何在SSA的基础上，考虑所有的分支情况，并返
    回相应分支的值呢？

    S: 老师在课上讲过LLVM采用一种phi(r1, r2)的指令，用来表示一个二元域，它
    能够在不同的分支condition下，选取对应的result进行赋值。通过查阅LLVM手
    册，我知道了phi的具体用法，解决了问题。

    3.
    Q: 不清楚atoi的声明方式。

    S: 直接写了一个含有atoi的小程序，并用LLVM来生成IR，观察LLVM对atoi的处
    理方式。并借鉴到fib.c中。

    4.
    Q: 关于getelementptr的指令的含义和使用方法，不是特别清楚。

    S: 通过查阅LLVM的手册，我了解到getelementptr指令用于获得聚合数据结构的
    子元素的地址。它只执行地址计算，不访问内存，形式上就是一个指针。手册上
    还有丰富的例子来说明它的参数使用方式。


翻译的关键部分：

    1. 函数的声明和定义。

    2. 变量的名称和占有的空间大小。要注意使用静态单赋值，变量的大小要对应
    C程序中的类型。

    3. 指针的使用。

    4. 分支判断和跳转的控制。人为编写时，可以方便地考虑如何优化使得跳转的
    控制语句更精简，但自动构建时，加入控制语句的优化并不容易。

